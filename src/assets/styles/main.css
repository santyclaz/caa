/**
 *	Variables
 */
/**
 *	Typography
 */
/**
 *	Alignment
 */
/**
 *	Translate
 */
/**
 *	Shapes
 */
/**
 *	Aspect-ratios (for container of images)
 *
 *	The following mixin adds attributes to achieve the following:
 *	1) Given a width, makes target container maintain given aspect ratio
 *	2) Crop any excessive content that exceeds aspect ratio
 *
 *	http://stackoverflow.com/a/25404121/1217025
 */
/**
 *	General
 */
body {
  font-family: 'Merriweather', serif; }

footer {
  height: 100px; }

section .section-description {
  margin-top: 50px;
  font-size: 18px;
  font-style: italic; }

section.sub-section {
  margin-top: 50px; }

/**
 *	Typography
 */
h1, h2 {
  font-family: 'sweet-pea';
  font-weight: normal;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  color: #D89B2A; }

h1 {
  font-size: 48px; }

h2 {
  font-size: 36px; }

h3 {
  font-size: 18px;
  font-weight: bold;
  text-transform: uppercase; }

/**
 *	Lists
 */
dl.dt-text-left dt {
  text-align: left; }

/**
 *	Aspect ratios
 */
.aspect-ratio-1-1 {
  height: 0px;
  padding-bottom: 100%;
  overflow: hidden; }
  .aspect-ratio-1-1 img {
    width: 100%; }

.aspect-ratio-3-2 {
  height: 0px;
  padding-bottom: 66.66667%;
  overflow: hidden; }
  .aspect-ratio-3-2 img {
    width: 100%; }

.aspect-ratio-4-3 {
  height: 0px;
  padding-bottom: 75%;
  overflow: hidden; }
  .aspect-ratio-4-3 img {
    width: 100%; }

/**
 * Grid classes
 */
.content-width {
  width: inherit; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhcmlhYmxlcy5zY3NzIiwidXRpbGl0eS5zY3NzIiwibWFpbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FDRkg7O0dBRUc7QUFTSDs7R0FFRztBQW1CSDs7R0FFRztBQXFCSDs7R0FFRztBQVlIOzs7Ozs7OztHQVFHO0FDekVIOztHQUVHO0FBRUgsSUFBSSxDQUFDO0VBQ0osV0FBVyxFQUFFLHFCQUFzQixHQUNuQzs7QUFFRCxNQUFNLENBQUM7RUFDTixNQUFNLEVBQUUsS0FBTSxHQUNkOztBQUVELE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztFQUM1QixVQUFVLEVBQUUsSUFBSztFQUVqQixTQUFTLEVBQUUsSUFBSztFQUNoQixVQUFVLEVBQUUsTUFBTyxHQUNuQjs7QUFFRCxPQUFPLFlBQVksQ0FBQztFQUNuQixVQUFVLEVBQUUsSUFBSyxHQUNqQjs7QUFHRDs7R0FFRztBQUVILEVBQUUsRUFBRSxFQUFFLENBQUM7RUQzQk4sV0FBVyxFQUFFLFdBQVk7RUFDekIsV0FBVyxFQUFFLE1BQU87RUFDcEIsc0JBQXNCLEVBQUMsV0FBWTtFQUNuQyxjQUFjLEVBQUUsa0JBQW1CO0VDMEJuQyxLQUFLLEVGNUJTLE9BQU8sR0U2QnJCOztBQUVELEVBQUUsQ0FBQztFQUNGLFNBQVMsRUFBRSxJQUFLLEdBQ2hCOztBQUVELEVBQUUsQ0FBQztFQUNGLFNBQVMsRUFBRSxJQUFLLEdBQ2hCOztBQUVELEVBQUUsQ0FBQztFQUNGLFNBQVMsRUFBRSxJQUFLO0VBQ2hCLFdBQVcsRUFBRSxJQUFLO0VBQ2xCLGNBQWMsRUFBRSxTQUFVLEdBQzFCOztBQUdEOztHQUVHO0FBRUgsRUFBRSxhQUFhLENBQ2QsRUFBRSxDQUFDO0VBQ0YsVUFBVSxFQUFFLElBQUssR0FDakI7O0FBR0Y7O0dBRUc7QUR5QkYsaUJBQWlCLENBQWpCO0VBVEEsTUFBTSxFQUFFLEdBQUk7RUFDWixjQUFjLEVBQUUsSUFBVTtFQUMxQixRQUFRLEVBQUUsTUFBTyxHQVNoQjtFQUZELGlCQUFpQixDQU5qQixHQUFHLENBQUM7SUFDSCxLQUFLLEVBQUUsSUFBSyxHQUNaOztBQUlELGlCQUFpQixDQUFqQjtFQVRBLE1BQU0sRUFBRSxHQUFJO0VBQ1osY0FBYyxFQUFFLFNBQVU7RUFDMUIsUUFBUSxFQUFFLE1BQU8sR0FTaEI7RUFGRCxpQkFBaUIsQ0FOakIsR0FBRyxDQUFDO0lBQ0gsS0FBSyxFQUFFLElBQUssR0FDWjs7QUFJRCxpQkFBaUIsQ0FBakI7RUFUQSxNQUFNLEVBQUUsR0FBSTtFQUNaLGNBQWMsRUFBRSxHQUFVO0VBQzFCLFFBQVEsRUFBRSxNQUFPLEdBU2hCO0VBRkQsaUJBQWlCLENBTmpCLEdBQUcsQ0FBQztJQUNILEtBQUssRUFBRSxJQUFLLEdBQ1o7O0FDWEY7O0dBRUc7QUFFSCxjQUFjLENBQUM7RUFDZCxLQUFLLEVBQUUsT0FBUSxHQUNmIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlx0VmFyaWFibGVzXG4gKi9cblxuJGFjY2VudENvbG9yMTogIzg2QzZDMzsgLy8gbWludFxuJGFjY2VudENvbG9yMjogI0VCQUNBQzsgLy8gcGlua1xuJGFjY2VudENvbG9yMzogI0Q4OUIyQTsgLy8gZ29sZFxuXG4kY2lyY2xlLWRpYW1ldGVyLWxnOiAyMDBweDsiLCIvKipcbiAqXHRUeXBvZ3JhcGh5XG4gKi9cblxuQG1peGluIHN3ZWV0LXBlYSB7XG5cdGZvbnQtZmFtaWx5OiAnc3dlZXQtcGVhJztcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZDtcblx0dGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuLyoqXG4gKlx0QWxpZ25tZW50XG4gKi9cblxuQG1peGluIHZlcnRpY2FsQWxpZ24oJHBvc2l0aW9uOiByZWxhdGl2ZSkge1xuXHRwb3NpdGlvbjogJHBvc2l0aW9uO1xuXHR0b3A6IDUwJTtcblx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG5cdC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuQG1peGluIGhvcml6b250YWxBbGlnbigkcG9zaXRpb246IHJlbGF0aXZlKSB7XG5cdHBvc2l0aW9uOiAkcG9zaXRpb247XG5cdGxlZnQ6IDUwJTtcblx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG5cdC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuXG4vKipcbiAqXHRUcmFuc2xhdGVcbiAqL1xuXG5AbWl4aW4gdHJhbnNsYXRlWCgkdmFsdWUpIHtcblx0LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHZhbHVlKTtcblx0LW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgkdmFsdWUpO1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHZhbHVlKTtcbn1cblxuQG1peGluIHRyYW5zbGF0ZVkoJHZhbHVlKSB7XG5cdC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR2YWx1ZSk7XG5cdC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoJHZhbHVlKTtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR2YWx1ZSk7XG59XG5cbkBtaXhpbiB0cmFuc2xhdGUoJHgsICR5KSB7XG5cdC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcblx0LW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7XG59XG5cblxuLyoqXG4gKlx0U2hhcGVzXG4gKi9cblxuQG1peGluIGNpcmNsZSB7XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuQG1peGluIGNpcmNsZUNvbnRhaW5lciB7XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuXG4vKipcbiAqXHRBc3BlY3QtcmF0aW9zIChmb3IgY29udGFpbmVyIG9mIGltYWdlcylcbiAqXG4gKlx0VGhlIGZvbGxvd2luZyBtaXhpbiBhZGRzIGF0dHJpYnV0ZXMgdG8gYWNoaWV2ZSB0aGUgZm9sbG93aW5nOlxuICpcdDEpIEdpdmVuIGEgd2lkdGgsIG1ha2VzIHRhcmdldCBjb250YWluZXIgbWFpbnRhaW4gZ2l2ZW4gYXNwZWN0IHJhdGlvXG4gKlx0MikgQ3JvcCBhbnkgZXhjZXNzaXZlIGNvbnRlbnQgdGhhdCBleGNlZWRzIGFzcGVjdCByYXRpb1xuICpcbiAqXHRodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNTQwNDEyMS8xMjE3MDI1XG4gKi9cblxuQG1peGluIGFzcGVjdFJhdGlvKCR3aWR0aCwgJGhlaWdodCkge1xuXHRoZWlnaHQ6IDBweDtcblx0cGFkZGluZy1ib3R0b206IHBlcmNlbnRhZ2UoJGhlaWdodC8kd2lkdGgpO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRpbWcge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG59XG4vLyBBc3BlY3QtcmF0aW8gY2xhc3MgZmFjdG9yeVxuQG1peGluIG1ha2VBc3BlY3RSYXRpb0NsYXNzKCR3aWR0aCwgJGhlaWdodCkge1xuXHQuYXNwZWN0LXJhdGlvLSN7JHdpZHRofS0jeyRoZWlnaHR9IHtcblx0XHRAaW5jbHVkZSBhc3BlY3RSYXRpbygkd2lkdGgsICRoZWlnaHQpO1xuXHR9XG59XG4iLCJAaW1wb3J0IFwidmFyaWFibGVzLnNjc3NcIjtcbkBpbXBvcnQgXCJ1dGlsaXR5LnNjc3NcIjtcblxuXG4vKipcbiAqXHRHZW5lcmFsXG4gKi9cblxuYm9keSB7XG5cdGZvbnQtZmFtaWx5OiAnTWVycml3ZWF0aGVyJywgc2VyaWY7XG59XG5cbmZvb3RlciB7XG5cdGhlaWdodDogMTAwcHg7XG59XG5cbnNlY3Rpb24gLnNlY3Rpb24tZGVzY3JpcHRpb24ge1xuXHRtYXJnaW4tdG9wOiA1MHB4O1xuXG5cdGZvbnQtc2l6ZTogMThweDtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5zZWN0aW9uLnN1Yi1zZWN0aW9uIHtcblx0bWFyZ2luLXRvcDogNTBweDtcbn1cblxuXG4vKipcbiAqXHRUeXBvZ3JhcGh5XG4gKi9cblxuaDEsIGgyIHtcblx0QGluY2x1ZGUgc3dlZXQtcGVhO1xuXHRjb2xvcjogJGFjY2VudENvbG9yMztcbn1cblxuaDEge1xuXHRmb250LXNpemU6IDQ4cHg7XG59XG5cbmgyIHtcblx0Zm9udC1zaXplOiAzNnB4O1xufVxuXG5oMyB7XG5cdGZvbnQtc2l6ZTogMThweDtcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cblxuLyoqXG4gKlx0TGlzdHNcbiAqL1xuXG5kbC5kdC10ZXh0LWxlZnQge1xuXHRkdCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0fVxufVxuXG4vKipcbiAqXHRBc3BlY3QgcmF0aW9zXG4gKi9cblxuLy8gLmFzcGVjdC1yYXRpby0xLTFcbkBpbmNsdWRlIG1ha2VBc3BlY3RSYXRpb0NsYXNzKDEsMSk7XG4vLyAuYXNwZWN0LXJhdGlvLTMtMlxuQGluY2x1ZGUgbWFrZUFzcGVjdFJhdGlvQ2xhc3MoMywyKTtcbi8vIC5hc3BlY3QtcmF0aW8tNC0zXG5AaW5jbHVkZSBtYWtlQXNwZWN0UmF0aW9DbGFzcyg0LDMpO1xuXG5cbi8qKlxuICogR3JpZCBjbGFzc2VzXG4gKi9cblxuLmNvbnRlbnQtd2lkdGgge1xuXHR3aWR0aDogaW5oZXJpdDtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
